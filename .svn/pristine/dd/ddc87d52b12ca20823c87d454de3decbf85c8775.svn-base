<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ctbt.beidou.base.dao.BdPhoneMsgMapper">
  <resultMap id="BaseResultMap" type="com.ctbt.beidou.base.model.BdPhoneMsg">
    <id column="phone_msg_id" jdbcType="INTEGER" property="phoneMsgId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="msg_type" jdbcType="CHAR" property="msgType" />
    <result column="msg_code" jdbcType="INTEGER" property="msgCode" />
    <result column="msg_txt" jdbcType="VARCHAR" property="msgTxt" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="send_flag" jdbcType="CHAR" property="sendFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    phone_msg_id, phone, msg_type, msg_code, msg_txt, send_time, send_flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bd_phone_msg
    where phone_msg_id = #{phoneMsgId,jdbcType=INTEGER}
  </select>
   <select id="queryPhonemsg" parameterType="java.util.Map" resultType="Map">
    select 
    <include refid="Base_Column_List" />
    from bd_phone_msg
	WHERE phone LIKE '%${phone}%' 
	<if test="msgType != null  and msgType !='' "> 
	and msg_type = #{msgType}
	</if>
	<if test="sendTimeStart != null"> 
	and (#{sendTimeStart} <![CDATA[ <= ]]> send_time or #{sendTimeStart} = send_time)
	</if>
	<if test="sendTimeEnd != null"> 
	and (#{sendTimeEnd} <![CDATA[ >= ]]> send_time or #{sendTimeEnd} = send_time)
	</if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bd_phone_msg
    where phone_msg_id = #{phoneMsgId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ctbt.beidou.base.model.BdPhoneMsg">
    insert into bd_phone_msg (phone_msg_id, phone, msg_type, 
      msg_code, msg_txt, send_time, 
      send_flag)
    values (#{phoneMsgId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{msgType,jdbcType=CHAR}, 
      #{msgCode,jdbcType=INTEGER}, #{msgTxt,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}, 
      #{sendFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ctbt.beidou.base.model.BdPhoneMsg">
    insert into bd_phone_msg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="phoneMsgId != null">
        phone_msg_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="msgType != null">
        msg_type,
      </if>
      <if test="msgCode != null">
        msg_code,
      </if>
      <if test="msgTxt != null">
        msg_txt,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="sendFlag != null">
        send_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="phoneMsgId != null">
        #{phoneMsgId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="msgType != null">
        #{msgType,jdbcType=CHAR},
      </if>
      <if test="msgCode != null">
        #{msgCode,jdbcType=INTEGER},
      </if>
      <if test="msgTxt != null">
        #{msgTxt,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendFlag != null">
        #{sendFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  
  
  
  <!-- 批量保存,并返回每个用户插入的ID -->
<insert id="insertbBatchSave" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO bd_phone_msg (phone, msg_txt,msg_type,send_time)
    VALUES
    <foreach collection="list" item="item" separator=",">
        (#{item.phone}, #{item.msgTxt}, #{item.msgType},#{item.sendTime})
    </foreach>
</insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ctbt.beidou.base.model.BdPhoneMsg">
    update bd_phone_msg
    <set>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="msgType != null">
        msg_type = #{msgType,jdbcType=CHAR},
      </if>
      <if test="msgCode != null">
        msg_code = #{msgCode,jdbcType=INTEGER},
      </if>
      <if test="msgTxt != null">
        msg_txt = #{msgTxt,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendFlag != null">
        send_flag = #{sendFlag,jdbcType=CHAR},
      </if>
    </set>
    where phone_msg_id = #{phoneMsgId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ctbt.beidou.base.model.BdPhoneMsg">
    update bd_phone_msg
    set phone = #{phone,jdbcType=VARCHAR},
      msg_type = #{msgType,jdbcType=CHAR},
      msg_code = #{msgCode,jdbcType=INTEGER},
      msg_txt = #{msgTxt,jdbcType=VARCHAR},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      send_flag = #{sendFlag,jdbcType=CHAR}
    where phone_msg_id = #{phoneMsgId,jdbcType=INTEGER}
  </update>
</mapper>