package com.ctbt.beidou.perm.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ctbt.beidou.base.model.BdPerm;
import com.ctbt.beidou.base.model.SysRegion;
import com.ctbt.beidou.base.service.IDicService;
import com.ctbt.beidou.base.utils.DicUtil;
import com.ctbt.beidou.base.utils.SpringContextUtil;
import com.ctbt.beidou.perm.service.IBdPermService;
import com.ctbt.beidou.role.service.IBdRoleService;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

@Controller
@RequestMapping("/perm")
public class PermController {

	@Resource
	private IBdPermService permService;
	private Logger logger = LogManager.getLogger(getClass());

//	private static Map<Integer,Map<String,Object>> rolePermMap = new HashMap<Integer,Map<String,Object>>();
	
	@RequestMapping("/toPermList")
	public String toPermList(HttpServletRequest request,Model model){

		return "perm/permList";
	}

	@RequestMapping("/queryPermList")
	public String queryPermList(HttpServletRequest request,Model model){

		return "perm/permList";
	}

	@RequestMapping("/toPermEdit")
	public String toPermEdit(HttpServletRequest request,Model model){

		return "perm/permEdit";
	}
	
	@RequestMapping("/queryRolePermTree")
	@ResponseBody
	public List<Map<String,Object>> queryRolePermTree(HttpServletRequest request,Model model) {
		List<Map<String,Object>> rolePermList = null;
		try {
			 	Integer roleId = Integer.parseInt(request.getParameter("ur_id"));
			 	rolePermList = permService.arrangeRolePermTree(permService.queryRolePermTree(roleId));  
			} catch (NumberFormatException e) {
			    e.printStackTrace();
			} catch (Exception e) {
				e.printStackTrace();
			}	

		return rolePermList;
	}
	
	@RequestMapping("/saveRolePermTree")
	@ResponseBody
	public String saveRolePermTree(HttpServletRequest request,Model model) {
		String flag = "failed";	
		try {
			 	Integer roleId = Integer.parseInt(request.getParameter("ur_id"));
			 	List<Map<String,Object>> rolePermList = permService.arrangeRolePermTree(permService.queryRolePermTree(roleId));
//			 	List<Map<String,Object>> rolePermList = null;
			 	flag = permService.updateRolePermTree(rolePermList,request.getParameter("selectedData"),roleId );
			 	return flag;
			} catch (NumberFormatException e) {
			    e.printStackTrace();
			} catch (Exception e) {
				e.printStackTrace();
			}	

		return flag;
	}
}
