<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ctbt.beidou.base.dao.BdMsgWeatherMapper">
  <resultMap id="BaseResultMap" type="com.ctbt.beidou.base.model.BdMsgWeather">
    <id column="msg_id" jdbcType="INTEGER" property="msgId" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="msg_txt" jdbcType="VARCHAR" property="msgTxt" />
    <result column="msg_from" jdbcType="INTEGER" property="msgFrom" />
    <result column="msg_to" jdbcType="INTEGER" property="msgTo" />
  </resultMap>
  <sql id="Base_Column_List">
    msg_id, send_time, msg_txt, msg_from, msg_to
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bd_msg_weather
    where msg_id = #{msgId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bd_msg_weather
    where msg_id = #{msgId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ctbt.beidou.base.model.BdMsgWeather" useGeneratedKeys="true" keyProperty="msgId">
    insert into bd_msg_weather (msg_id, send_time, msg_txt, 
      msg_from, msg_to)
    values (#{msgId,jdbcType=INTEGER}, #{sendTime,jdbcType=TIMESTAMP}, #{msgTxt,jdbcType=VARCHAR}, 
      #{msgFrom,jdbcType=INTEGER}, #{msgTo,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ctbt.beidou.base.model.BdMsgWeather">
    insert into bd_msg_weather
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="msgId != null">
        msg_id,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="msgTxt != null">
        msg_txt,
      </if>
      <if test="msgFrom != null">
        msg_from,
      </if>
      <if test="msgTo != null">
        msg_to,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="msgId != null">
        #{msgId,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="msgTxt != null">
        #{msgTxt,jdbcType=VARCHAR},
      </if>
      <if test="msgFrom != null">
        #{msgFrom,jdbcType=INTEGER},
      </if>
      <if test="msgTo != null">
        #{msgTo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ctbt.beidou.base.model.BdMsgWeather">
    update bd_msg_weather
    <set>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="msgTxt != null">
        msg_txt = #{msgTxt,jdbcType=VARCHAR},
      </if>
      <if test="msgFrom != null">
        msg_from = #{msgFrom,jdbcType=INTEGER},
      </if>
      <if test="msgTo != null">
        msg_to = #{msgTo,jdbcType=INTEGER},
      </if>
    </set>
    where msg_id = #{msgId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ctbt.beidou.base.model.BdMsgWeather">
    update bd_msg_weather
    set send_time = #{sendTime,jdbcType=TIMESTAMP},
      msg_txt = #{msgTxt,jdbcType=VARCHAR},
      msg_from = #{msgFrom,jdbcType=INTEGER},
      msg_to = #{msgTo,jdbcType=INTEGER}
    where msg_id = #{msgId,jdbcType=INTEGER}
  </update>
  
  
   <select id="findAll" parameterType="java.util.Map" resultType="Map">
 select ship_id , ship_name , card_no1 from bd_ship
	</select>
  
  <insert id="toInsertMsg" parameterType="java.util.List">
  insert into bd_msg_weather (send_time,msg_txt,msg_from,msg_to)
  values
  <foreach collection="list" item="item" index="index" separator=",">
            (#{item.sendTime,jdbcType=TIMESTAMP},#{item.msgTxt,jdbcType=VARCHAR},#{item.msgFrom,jdbcType=INTEGER},
            #{item.msgTo,jdbcType=INTEGER})
  </foreach>  
  </insert>
  
  <select id="searchInfo" parameterType="java.lang.String" resultType="Map">
  select ship_id , ship_name , card_no1 from bd_ship where ship_name like #{text} or card_no1 like #{text}
  </select>
  
  <select id="selectByCondition" parameterType="java.util.Map" resultMap="BaseResultMap">
  select  <include refid="Base_Column_List" /> 
  from bd_msg_weather where msg_id is not null
      <if test="cardNo != null" >
       and msg_to = #{cardNo}
      </if>
      
      <if test="beginTime != null and endTime == null">
  		and send_time >= #{beginTime}
  	  </if>
  	
  	  <if test="beginTime != null and endTime != null">
  	   and send_time between #{beginTime} and #{endTime}
  	  </if>
  	  
      order by send_time DESC
  </select>
</mapper>