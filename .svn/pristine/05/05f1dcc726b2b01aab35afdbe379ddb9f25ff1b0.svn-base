package com.ctbt.beidou.datapack.service;

import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.ctbt.beidou.base.CommValue;
import com.ctbt.beidou.base.dao.BdDataPackRecvMapper;
import com.ctbt.beidou.base.dao.BdDataPackSendMapper;
import com.ctbt.beidou.base.dao.BdMsgChatMapper;
import com.ctbt.beidou.base.model.BdDataPackRecv;
import com.ctbt.beidou.base.model.BdMsgAlarm;
import com.ctbt.beidou.base.model.BdSendPackage;
import com.ctbt.beidou.base.model.BdMsgChat;
import com.ctbt.beidou.base.model.BdMsgNotice;
import com.ctbt.beidou.base.model.BdMsgWeather;
import com.ctbt.beidou.base.model.BdRecvPackage;

@Transactional
@Service("datapackService")
public class BdDataPackServiceImpl implements IBdDataPackService{

	@Resource
	private BdDataPackSendMapper bdDataPackSendMapper;
	
	@Resource
	private BdDataPackRecvMapper bdDataPackRecvMapper;

	@Resource
	private BdMsgChatMapper bdMsgChatMapper;
	
	@Override
	public List<BdSendPackage> queryDataPackSendList(Map<String, Object> record) {
		
		return bdDataPackSendMapper.selectByCondition(record);
	}

	@Override
	public List<BdDataPackRecv> queryDataPackRecvList(Map<String, Object> record) {
		
		return bdDataPackRecvMapper.selectByCondition(record);
	}

	/**
	 * 从数据站接收到的数据包，保存至中心平台的数据包接收表
	 */
	@Override
	public int saveBdRecvPackage(BdRecvPackage pkg) {

		pkg.setFromPkgId(pkg.getPkgId());//数据站中的 pkgId 放置 FromPkgId
		pkg.setPkgId(null);//到了中心平台重新生成pkgId
		
		String pkgType = pkg.getPkgType();//报文类型
		switch(pkgType){
			case "d":
				//d普通消息（文本）
				BdMsgChat chat = new BdMsgChat();
				chat.setRecvTime(pkg.getRecvTime());
				chat.setMsgTxt(pkg.getPkgMsg());
				chat.setMsgType(CommValue.BdMsgChat_MsgType_TEXT);
				
				chat.setMsgFrom(pkg.getPkgFrom());
				chat.setFromPhone(pkg.getPhoneFrom());
				chat.setMsgTo(pkg.getPkgTo());
				chat.setToPhone(pkg.getPhoneTo());
				
				chat.setIsRecv(CommValue.NO);
				bdMsgChatMapper.insert(chat);
				
				pkg.setMsgId(Long.valueOf(chat.getMsgId().intValue()));
				break;
				
			case "e":
				//e登录
				
				break;
				
			case "f":
				//f退出登录
				
				break;
				
			case "a":
				//a报警
				
				break;
				
			case "b":
				//b解除报警
				
				break;
				
			default:
				//非正常报文类型
				pkgType = "";
				break;
		}
		
		return bdDataPackRecvMapper.insert(pkg);
	}

	@Override
	public int saveBdSendPackage(BdSendPackage record) {
		return bdDataPackSendMapper.insert(record);
	}

	@Override
	public int saveBdSendPackageForChat(BdMsgChat msg) {
		if("1".equals(msg.getMsgType())) {
			String pkgType = "d";
			
			BdSendPackage record = new BdSendPackage();
			record.setCenterNo(CommValue.CenterNo);
			record.setMasterFrom(msg.getMsgFrom());
			record.setPkgFrom(msg.getMsgFrom());
			record.setPhoneFrom(msg.getFromPhone());
			
			record.setMasterTo(msg.getMsgTo());
			record.setPkgTo(msg.getMsgTo());
			record.setPhoneTo(msg.getToPhone());
			
			record.setPkgData(msg.getMsgTxt());
			record.setMsgId(msg.getMsgId());
			record.setCreateTime(new Date());
			record.setPkgType(pkgType);
			
			return bdDataPackSendMapper.insert(record);
		}
		
		return 0;
	}

	@Override
	public int saveBdSendPackageForAlarm(BdMsgAlarm msg) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int saveBdSendPackageForNotice(BdMsgNotice msg) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int saveBdSendPackageForWeather(BdMsgWeather msg) {
		// TODO Auto-generated method stub
		return 0;
	}

	
}
